
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Abin
 */
public class PutNotice extends javax.swing.JFrame {

    /**
     * Creates new form PutNotice
     */
     private static final String JDBC_DRIVER = "com.mysql.jdbc.Driver";
    private static final String DB_URL = "jdbc:mysql://192.168.1.101:3306/vcr";
    
    private static final String USER = "root";
    private static final String PASS = "root";
    
    Connection conn=null;
    Statement stmt = null;
    
   //PutNotice home = new PutNotice();
    
    private User user;
    public PutNotice(User user1) {
        initComponents();
        this.user = user1;
        
         this.addWindowListener(new WindowAdapter() {
      @Override
      public void windowClosing(WindowEvent e) {
          //showDialog(this);
          System.out.println("exit");
         setVisible(false);
         // dispose();
      }
    });
         setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });

        jButton1.setText("Post Notice");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jButton1KeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(165, 165, 165)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String message = jTextField1.getText();
        if(!message.equals(""))
        {
            try{
                Class.forName("com.mysql.jdbc.Driver");
               conn = DriverManager.getConnection(DB_URL,USER,PASS);
               
               jTextField1.setText("");
               stmt = conn.createStatement();
               String sql;
               sql = "insert into notice (uploader,message) values (\"" + user.getName() + "\",\"" + message + "\")";
               stmt.executeUpdate(sql);
               Thread t1=new Thread(new Runnable() {
                    @Override
                    public void run() {
                        Phpemail sen=new Phpemail();
               try{sen.Sendmail(user.username,message);System.out.println("i am sending notice");}
               catch(Exception e){System.out.println(e.getMessage());}//To change body of generated methods, choose Tools | Templates.
                    }
                });
               t1.start();
               
               
               
            }
            catch (SQLException e)
            {
                System.out.print(e.getMessage());
            } catch (ClassNotFoundException ex) {
             Logger.getLogger(PutNotice.class.getName()).log(Level.SEVERE, null, ex);
         }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1KeyTyped

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
        // TODO add your handling code here:
        char ch = evt.getKeyChar();
        if(ch == '\n'){
             String message = jTextField1.getText();
             if(!message.equals(""))
             {
                try{
//                jLabel1.setText("160 characters only");
                Class.forName("com.mysql.jdbc.Driver");
                 conn = DriverManager.getConnection(DB_URL,USER,PASS);
              
////               System.out.println("Message is " + message);
//               if(message.length()>=160){
//                   message = message.substring(0, 159);
////                   System.out.println(message);
//                   jLabel1.setText("Limit exceeded. First 160 characters considered.");
//               }
//               System.out.println(message.length());
                 jTextField1.setText("");
                stmt = conn.createStatement();
                String sql;
                sql = "insert into notice (uploader,message) values (\"" + user.getUsername() + "\",\"" + message + "\")";
                stmt.executeUpdate(sql);
                Thread t1=new Thread(new Runnable() {
                    @Override
                    public void run() {
                        Phpemail sen=new Phpemail();
               try{sen.Sendmail(user.username,message);System.out.println("i am sending notice");}
               catch(Exception e){System.out.println(e.getMessage());}//To change body of generated methods, choose Tools | Templates.
                    }
                });
               t1.start();
               
               
            }
            catch (SQLException e)
            {
                System.out.print(e.getMessage());
            } 
            catch (ClassNotFoundException ex) {
             Logger.getLogger(PutNotice.class.getName()).log(Level.SEVERE, null, ex);
            }
            //jLabel1.setText("160 characters left");
        }
        else
        {
        //jLabel1.setText("160 characters only");
//        String message1 = ch + jTextField1.getText();
//        System.out.println(message1);
//        if(160 - message1.length() >= 0)
//            jLabel1.setText((160 - message1.length()) + " characters left.");
//        
//        else
//            jLabel1.setText(message1.length() - 160 + " characters extra. Will be truncated.");
     }
        
        
        }
    }//GEN-LAST:event_jButton1KeyPressed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        // TODO add your handling code here:
        char ch = evt.getKeyChar();
        if(ch == '\n'){
             String message = jTextField1.getText();
             if(!message.equals(""))
             {
                try{
//                jLabel1.setText("160 characters only");
                Class.forName("com.mysql.jdbc.Driver");
                 conn = DriverManager.getConnection(DB_URL,USER,PASS);
              
////               System.out.println("Message is " + message);
//               if(message.length()>=160){
//                   message = message.substring(0, 159);
////                   System.out.println(message);
//                   jLabel1.setText("Limit exceeded. First 160 characters considered.");
//               }
//               System.out.println(message.length());
                 jTextField1.setText("");
                stmt = conn.createStatement();
                String sql;
                sql = "insert into notice (uploader,message) values (\"" + user.getUsername() + "\",\"" + message + "\")";
                stmt.executeUpdate(sql);
                Thread t1=new Thread(new Runnable() {
                    @Override
                    public void run() {
                        Phpemail sen=new Phpemail();
               try{sen.Sendmail(user.username,message);System.out.println("i am sending notice");}
               catch(Exception e){System.out.println(e.getMessage());}//To change body of generated methods, choose Tools | Templates.
                    }
                });
               t1.start();
               
               
            }
            catch (SQLException e)
            {
                System.out.print(e.getMessage());
            } 
            catch (ClassNotFoundException ex) {
             Logger.getLogger(PutNotice.class.getName()).log(Level.SEVERE, null, ex);
            }
            //jLabel1.setText("160 characters left");
        }
        else
        {
        //jLabel1.setText("160 characters only");
//        String message1 = ch + jTextField1.getText();
//        System.out.println(message1);
//        if(160 - message1.length() >= 0)
//            jLabel1.setText((160 - message1.length()) + " characters left.");
//        
//        else
//            jLabel1.setText(message1.length() - 160 + " characters extra. Will be truncated.");
     }
        
        
        }
    }//GEN-LAST:event_jTextField1KeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PutNotice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PutNotice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PutNotice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PutNotice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                User user = new User("abin","abin");
                new PutNotice(user).setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
